val baseName = "Twitter"

val root = project
  .in(file("."))
  .settings(
    name := baseName
  )
  .aggregate(analysis, dataImporter)


lazy val analysis = project
  .in(file("twitter-analysis"))
  .settings(
    name := s"${baseName}-sentiment-anaysis",
    version := "0.0.1",
    scalaVersion := "2.11.11",
    libraryDependencies ++= Dependencies.root,
    assemblyMergeStrategy in assembly := {
      case PathList("log4j.xml", xs @ _ *)      => MergeStrategy.discard
      case PathList("reference.conf", xs @ _ *) => MergeStrategy.concat
      case PathList("META-INF", xs @ _ *)       => MergeStrategy.discard
      case x                                    => MergeStrategy.first
    }
  )

lazy val dataImporter = project
  .in(file("twitter-retriever"))
  .settings(
    name := s"${baseName}-data-retiever",
    version := "0.0.1",
    scalaVersion := "2.11.11",
    libraryDependencies ++= Dependencies.root,
    assemblyMergeStrategy in assembly := {
      case PathList("log4j.xml", xs @ _ *)      => MergeStrategy.discard
      case PathList("reference.conf", xs @ _ *) => MergeStrategy.concat
      case PathList("META-INF", xs @ _ *)       => MergeStrategy.discard
      case x                                    => MergeStrategy.first
    }
  )
